# [BionAnalyze - Single Cell Cloud Lab](https://www.bioanalyze.io)

Open-source **[Cloud Lab](https://www..bioanalyze.io)** for Single Cell Analysis.

## Features

- Cloud Native - Browse an S3 bucket and view your Single Cell data in [CellxGene](https://github.com/chanzuckerberg/cellxgene).
- Authentication enabled through [Flask AppBuilder](https://flask-appbuilder.readthedocs.io/en/latest/security.html) in the standalone version or [ShinyProxy](https://www.shinyproxy.io/documentation/configuration/) in the hosted version.
- Open source - Nothing is hidden behind a paywall.
- Self hosted and hosted with the AWS Marketplace (Coming Soon!) option.
- Download your PCA, TSNE, or UMAP plots for any dataset.

**Choose your Datasets from S3**

![Select S3 Datasets](./apps/static/select-s3-dataset.png)

**Plot Views**

Plot your PCA, Umap, and/or TSNE with gene names or other observations.

![PCA Histogram](./apps/static/sc_pca_hist.png)
![PCA Scatterplot](./apps/static/sc_pca_scatter.png)

**DataTable Views**

View, sort, filter and export your ScanPy dataframes.

![Observations](./apps/static/observations_table.png)
![Variables](./apps/static/variables_table.png)

**CellxGene**

[CellxGene](https://github.com/chanzuckerberg/cellxgene) is *an interactive explorer for single-cell transcriptomics data*.


## ✨ Quick Start Self Hosted in `Docker`

> Get the code

```bash
git clone https://github.com/dabble-of-devops-bioanalyze/single-cell-cloud-lab
cd single-cell-cloud-lab
cp .env.sample .env
```

> Add your env vars

At a minimum you'll need AWS credentials and the S3 bucket where your scanpy datasets are stored.

```
SECRET_KEY=S3cr3t_K#Key
CELLXGENE_BUCKET="my-s3-bucket"
AWS_ACCESS_KEY_ID="1234"
AWS_SECRET_ACCESS_KEY="abcd"
AWS_DEFAULT_REGION=us-east-1
SYNC_ENABLED=True
# View without authentication
PUBLIC=True
```

If you have the `PUBLIC=True` in your env file you won't need to configure any authentication.

To configure authentication open the `config.py` and make any necessary changes.

> Start the app in Docker

```bash
docker-compose up --build
```

Visit `http://localhost:5005` in your browser. The app should be up & running.

## ✨ Quick Start  - AWS Marketplace

Coming Soon!