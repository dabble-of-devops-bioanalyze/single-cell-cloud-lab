name: Create Release

on: [push]
# on:
#   workflow_run:
#     workflows: ["Run Tests"]
#     types: [completed]
#     branches:
#       - main

# trying with PR
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run changed-files
        id: changed-docker
        # uses: tj-actions/changed-files@v15
        uses: tj-actions/changed-files@v13.1
        with:
          files: "**/**"

      - name: Get Changed Files
        id: changed-files
        run: |-
          echo "${{ steps.changed-docker.outputs.any_changed }}"

      - name: Get Changed Files - JSON
        id: changed-files-json
        run: |
          echo '${{ toJSON(steps.changed-docker.outputs) }}'
        shell:
          bash

      - uses: actions-ecosystem/action-get-latest-tag@v1
        # if: steps.changed-docker.outputs.any_changed == 'true'
        id: get-latest-tag

      - uses: actions-ecosystem/action-bump-semver@v1
        # if: steps.changed-docker.outputs.any_changed == 'true'
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: minor

      - uses: actions-ecosystem/action-push-tag@v1
        # if: steps.changed-docker.outputs.any_changed == 'true'
        with:
          tag: ${{ steps.bump-semver.outputs.new_version }}
          message: "${{ steps.bump-semver.outputs.new_version }}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}"
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        # if: steps.changed-docker.outputs.any_changed == 'true'
        id: changelog
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        # if: steps.changed-docker.outputs.any_changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump-semver.outputs.new_version }}
          release_name: Release ${{ steps.bump-semver.outputs.new_version }}
          body: ${{ steps.changelog.outputs.changelog }}

      - name: Set Job Environment Variables
        # if: steps.changed-docker.outputs.any_changed == 'true'
        run: |-
          CALVER="$( date -u '+%Y.%m.%d' )"
          SHA7="${GITHUB_SHA::7}"
          VERSION="${{ steps.bump-semver.outputs.new_version }}"
          echo "${CALVER}"
          echo "${SHA7}"
          echo "${VERSION}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "CALVER=${CALVER}" >> $GITHUB_ENV
          echo "SHA7=${SHA7}" >> $GITHUB_ENV

      - uses: docker/setup-buildx-action@v1
        # if: steps.changed-docker.outputs.any_changed == 'true'

      # Dockerhub login
      - uses: docker/login-action@v1
        # if: steps.changed-docker.outputs.any_changed == 'true'
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - uses: docker/build-push-action@v2
      #   if: steps.changed-docker.outputs.any_changed == 'true'
      #   with:
      #     context: .
      #     push: true
      #     tags: |
      #       dabbleofdevops/k8s-single-cell-cloud-lab:${{ env.VERSION }},dabbleofdevops/k8s-single-cell-cloud-lab:${{env.SHA7}}

      # TODO Push to ECR
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build and Push
        # if: steps.changed-docker.outputs.any_changed == 'true'
        run: |-
          make VERSION=${VERSION} SHA=${SHA7} build
          make VERSION=${VERSION} SHA=${SHA7} push